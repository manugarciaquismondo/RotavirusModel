function [ result ] = updateInfected(rotavirusPop, inputStage, firstDivisor, secondDivisor)
global kappa lambda gamma
multiplierSwitch=getMultiplierSwitcher(inputStage);
%     result =  kappa*lambda*sum(rotavirusPop.infected(:))*(rotavirusPop.susceptible(inputStage)*(1-secondDivisor)...
%     + rotavirusPop.susceptible(inputStage-1)*firstDivisor) + rotavirusPop.infected(inputStage)*(1-(1-secondDivisor)*gamma...
%     - secondDivisor*multiplierSwitch) +firstDivisor*(1-gamma)*rotavirusPop.infected(inputStage-1);
    result = rotavirusPop.infected(inputStage)  + (1-secondDivisor)*kappa*lambda*rotavirusPop.susceptible(inputStage)*sum(rotavirusPop.infected(:)) +...
    (rotavirusPop.susceptible(inputStage-1)*firstDivisor)*kappa*lambda*sum(rotavirusPop.infected(:)) + firstDivisor*(1-gamma)*rotavirusPop.infected(inputStage-1) ...
    - multiplierSwitch*secondDivisor*rotavirusPop.infected(inputStage)  - (1-secondDivisor)*gamma*rotavirusPop.infected(inputStage);

% i1  + (1-(1/183))*kappa*lambda*s1*(i0+i1+i2+i3+i4) +...
%     (s0/183)*kappa*lambda*(i0+i1+i2+i3+i4) + (1/183)*(1-gamma)*i0 ...
%     - (1/183)*i1  - (1-(1/183))*gamma*i1
% i2 + (1-(1/365))*kappa*lambda*s2*(i0+i1+i2+i3+i4)+(s1/183)*kappa*lambda*(i0+i1+i2+i3+i4)...
%     + (1/183)*(1-gamma)*i1 -(1/365)*i2  - (1-(1/365))*gamma*i2 ;

%UNTITLED4 Summary of this function goes here
%   Detailed explanation goes here


end

